#!/bin/sh

### Package: pbp-build-ffmpeg
### Version: v20200615.2130
### Author: Michael Gan "xmixahlx" michaelbgan@gmail.com
### License: GPLv3
### Script Dependencies: linux

## VARS
RESDIR=`pwd`/resources
DEVDIR=`pwd`/upstream
FFMPEGREL=4.2.3

## DEPS
# Provide INSTALLDEPS=debian to install dependencies.
if [ $INSTALLDEPS ]; then
 if [ $INSTALLDEPS = debian ]; then
 sudo apt-get build-dep ffmpeg
 fi
fi

## OVERRIDE basic with BUILDCONFIG=full
if [ -z $BUILDCONFIG ]; then
 BUILDCONFIG=basic
fi
echo "\n*** BUILDCONFIG selected is $BUILDCONFIG.\n"

## PREP
set -e
mkdir -p $DEVDIR
cd $DEVDIR
rm -Rf ffmpeg-$FFMPEGREL

## DOWNLOAD
[ -f ffmpeg-$FFMPEGREL.tar.bz2 ] || wget https://ffmpeg.org/releases/ffmpeg-$FFMPEGREL.tar.bz2
tar xf ffmpeg-$FFMPEGREL.tar.bz2

## PATCH
cd ffmpeg-$FFMPEGREL
patch -p1 < $RESDIR/ffmpeg/4.2.2/ffmpeg_v4l2-request-hwaccel-4.2.2-rkvdec_20200610.diff

## CONFIGURE
if [ $BUILDCONFIG = basic ]; then
 echo "\n*** Using basic BUILDCONFIG.\n"
 ./configure --enable-v4l2-request --enable-libdrm --enable-libudev --enable-pic --enable-shared \
 --enable-avfilter --enable-postproc --enable-avresample --enable-pthreads --enable-gpl \
 --enable-nonfree --enable-version3 \
 --toolchain=hardened --prefix=/usr/local \
 --libdir=/usr/local/lib/aarch64-linux-gnu --shlibdir=/usr/local/lib/aarch64-linux-gnu
fi
if [ $BUILDCONFIG = standard ]; then
 echo "\n*** Using standard BUILDCONFIG.\n"
 ./configure --enable-v4l2-request --enable-libdrm --enable-libudev --enable-pic --enable-shared \
 --enable-avfilter --enable-gcrypt --enable-gpl --enable-libass --enable-libbluray --enable-libdav1d \
 --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libmp3lame \
 --enable-libopenh264 --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse \
 --enable-librsvg --enable-libspeex --enable-libsrt --enable-libtheora --enable-libtwolame \
 --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 \
 --enable-libxml2 --enable-libxvid --enable-nonfree --enable-opengl --enable-openssl --enable-postproc \
 --enable-pthreads --enable-version3 --enable-avresample --enable-libx264 \
 --toolchain=hardened --prefix=/usr/local \
 --libdir=/usr/local/lib/aarch64-linux-gnu --shlibdir=/usr/local/lib/aarch64-linux-gnu
fi
if [ $BUILDCONFIG = full ]; then
 echo "\n*** Using full BUILDCONFIG.\n"
 ./configure --enable-v4l2-request --enable-libdrm --enable-libudev --enable-pic --enable-shared \
 --disable-decoder=amrnb --disable-decoder=libopenjpeg --disable-gnutls --disable-libopencv \
 --disable-podpages --disable-sndio --disable-stripping --enable-avfilter --enable-gcrypt \
 --enable-gpl --enable-ladspa --enable-libaom --enable-libaribb24 --enable-libass --enable-libbluray \
 --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d \
 --enable-libfdk-aac --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi \
 --enable-libgme --enable-libgsm --enable-libilbc --enable-libjack --enable-libkvazaar --enable-liblensfun \
 --enable-libmp3lame --enable-libmysofa --enable-libopencore-amrnb --enable-libopencore-amrwb \
 --enable-libopenh264 --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse \
 --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr \
 --enable-libspeex --enable-libsrt --enable-libtesseract --enable-libtheora --enable-libtwolame \
 --enable-libvidstab --enable-libvo-amrwbenc --enable-libvorbis --enable-libvpx --enable-libwavpack \
 --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq \
 --enable-libzvbi --enable-lv2 --enable-nonfree --enable-openal --enable-opencl --enable-chromaprint \
 --enable-opengl --enable-openssl --enable-postproc --enable-pthreads --enable-version3 \
 --enable-avresample --enable-frei0r --enable-libx264 --enable-libiec61883 --enable-libdc1394 \
 --toolchain=hardened --prefix=/usr/local \
 --libdir=/usr/local/lib/aarch64-linux-gnu --shlibdir=/usr/local/lib/aarch64-linux-gnu
fi

## BUILD
make -j `nproc`

## INSTALL
sudo make install
sudo ldconfig

## EXIT
exit

## ENJOY
